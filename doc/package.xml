<?xml version="1.0" encoding="UTF-8" ?>
<?xml-stylesheet type="text/xsl" href="stromx-doc.xsl"?>

<StromxDoc>
    <Package id="runtime" name="Runtime">
        <!-- Als erstes kommen die Datentypen (=DataVariant), welche in diesem Package definiert sind. -->
        <DataVariant id="bool" title="Bool">
            A Boolean value.
        </DataVariant>
        <DataVariant id="float" title="Float">
            A float value.
        </DataVariant>
        <DataVariant id="int32" title="32-bit integer">
            An 32-bit integer value.
        </DataVariant>
        <DataVariant id="image" title="Image">
            <!-- Eigenes "Description" Element sinnvoll? -->
            <Description>
                All data objects of the variant <em>Image</em> implement the interface stromx::Image.
                Images are two-dimensional arrays with 1-3 channels and 8-bit or 16-bit pixels.
            </Description>
        </DataVariant>
        
        
        <!-- Der Datentyp, von dem dieser Type abgeleitet ist, wird mit "variantPackage" und "variantId" referenziert. 
            Meinen Sie, ist das vernuenftig??? -->
        <DataVariant id="mono_image_8bit" title="Mono image 8-bit" variantPackage="Runtime" variantId="5">
            <Description>
                Image with one channel and 8-bit pixels.
            </Description>
        </DataVariant>
    </Package>
    <Package id="example" name="Example">
        <!-- Jetzt kommen die Operatoren (hier nur einer). -->
        <Operator id="blur" type="Blur">
            <Description>
                This operators convolutes the input image with a Gaussian kernel of a given
                width. The operator can operate in-place.
            </Description>
            
            <!-- Der Datentyp dieses Parameters wird mit "variantPackage" und "variantId" referenziert. 
                Meinen Sie immer noch, dass das vernuenftig ist??? -->
            <Parameter id="0" title="In place" variantPackageId="runtime" variantId="bool">
                <Description>
                    If true the operator is initialized with only one input and the image at
                    this input is blurred in-place. Otherwise, the operator is initialized with
                    an input and a destination input.
                </Description>
            </Parameter>
            <Parameter id="0" title="Kernel size" variantPackageId="runtime" variantId="int32">
                <Description>
                    The size of the Gaussian kernel.
                </Description>
            </Parameter>
            <Input id="0" title="Source" variantPackageId="runtime" variantId="mono_image_8bit">
                <Description>
                    The input image. If the operator is initialized as an in-place operation
                    this image will be blurred.
                </Description>
            </Input>
            <Input id="0" title="Destination" variantPackageId="runtime" variantId="mono_image_8bit">
                <Description>
                    The image which will contain the blurred version of the image <em>Source</em>.
                </Description>
            </Input>
            <Output id="0" title="Result" variantPackageId="runtime" variantId="mono_image_8bit">
                <Description>
                    The the blurred image. This is either the destination image (no in-place operation) or
                    the input image (in-place operation).
                </Description>
            </Output>
        </Operator>
    </Package>
</StromxDoc>