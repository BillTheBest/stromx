/** \page simple Simple

This page introduces the user to the topic.

\code
#include <strom/Stream.h>
#include <strom/Operator.h>
#include <strom/Thread.h>
#include <strom/ReadAccess.h>

#include <base/Counter.h>
#include <base/PeriodicDelay.h>

#include <iostream>


int main (int argc, char* argv[])
{
    using namespace strom;
    
    Stream strom;
    
    Operator* source = new Operator(new base::Counter);
    source->initialize();
    strom.addOperator(source);
    
    Operator* timer = new Operator(new base::PeriodicDelay);
    timer->initialize();
    strom.addOperator(timer);
    
    timer->setParameter(base::PeriodicDelay::PERIOD, UInt32(1000));
    
    strom.connect(source, base::Counter::OUTPUT, timer, base::PeriodicDelay::INPUT);
    
    Thread* thread = strom.addThread();
    thread->addNode(timer, base::PeriodicDelay::INPUT);
    
    strom.start();
    
    for(unsigned int i = 0; i < 5; ++i)
    {
        DataContainer data = timer->getOutputData(base::PeriodicDelay::OUTPUT);
        ReadAccess<UInt32> count(data);
        timer->clearOutputData(base::PeriodicDelay::OUTPUT);
        
        std::cout << "Received " <<  (unsigned int)(count()) << std::endl;
    }
    
    strom.stop();
    strom.join();
}
\endcode

Now you can proceed to \ref file.
*/
