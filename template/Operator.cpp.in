#include "@CLASS@.h"

#include "Config.h"

#include <stromx/runtime/OperatorException.h>

#include <typeinfo>


namespace stromx
{
    using namespace runtime;
    
    namespace @PACKAGE@
    {
        const std::string @CLASS@::TYPE("@CLASS@");
        const std::string @CLASS@::PACKAGE(PACKAGE_NAME);
        const Version @CLASS@::VERSION(STROMX_EXAMPLE_VERSION_MAJOR, STROMX_EXAMPLE_VERSION_MINOR, STROMX_EXAMPLE_VERSION_PATCH);
        
        @CLASS@::@CLASS@()
        : OperatorKernel(TYPE, PACKAGE, VERSION, setupInputs(), setupOutputs(), setupParameters())
        {
        }

        void @CLASS@::setParameter(unsigned int id, const Data& value)
        {
            try
            {
                switch(id)
                {
                default:
                    throw WrongParameterId(id, *this);
                }
            }
            catch(std::bad_cast&)
            {
                throw WrongParameterType(*parameters()[id], *this);
            }
        }

        const Data& @CLASS@::getParameter(unsigned int id)
        {
            switch(id)
            {
            default:
                throw WrongParameterId(id, *this);
            }
        }  
        
        void @CLASS@::execute(DataProvider& provider)
        {
            
        }
        
        const std::vector<const Description*> @CLASS@::setupInputs()
        {
            std::vector<const Description*> inputs;

            return inputs;
        }
        
        const std::vector<const Description*> @CLASS@::setupOutputs()
        {
            std::vector<const Description*> outputs;
            
            return outputs;
        }
        
        const std::vector<const Parameter*> @CLASS@::setupParameters()
        {
            std::vector<const Parameter*> parameters;
                                        
            return parameters;
        }
    }
}
